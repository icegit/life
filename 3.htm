<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lifetime Visualization</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            height: 100%;
            display: flex;
            font-family: Arial, sans-serif;
            font-size: 9px;
            overflow: auto;
        }

        #lifeTable {
            width: 100%;
            padding: 10px;
        }

        .row {
            display: flex;
        }

        .box {
            width: calc(60% / 52); /* Adjusted as per your tweak */
            height: calc((100vh - 20px) / 80 - 2px); /* 80 should be equal to expected age aka row count */
            box-sizing: border-box;
            border: 1px solid black;
            margin: 1px;
            text-align: center;
            overflow: hidden;
        }

        .year-label, .milestone {
            min-width: fit-content; /* Using min-width as instructed */
            border: none; /* No borders */
        }
		
		.milestone {		
			margin-left: 5px;			
		}

        .filled {
            background-color: green;
        }

        .achieved {
            color: gray;
        }

        .pending {
            color: black;
        }

    </style>
</head>

<body>

    <div id="lifeTable">
        <!-- Rows with year labels, weeks, and milestones will be added here via JavaScript -->
    </div>

    <script>
        const BOXES_PER_ROW = 52;
        const TOTAL_ROWS = 80;  
        const BIRTHDATE = new Date('1957-02-01');
		
		const milestones = {
			1: "Begin to smile, coo, hold head up",
			2: "Start teething, crawling",
			3: "Walking, first words",
			4: "Running, potty training",
			5: "Improved speech, imaginative play",
			6: "Reading simple words, bike riding",
			7: "Understanding time, drawing skills",
			8: "Develop friendships, basic math skills",
			9: "Increased muscle coordination, growth in cognitive skills",
			10: "Tie shoelaces, improved problem-solving skills",
			11: "Onset of puberty, growth spurts",
			12: "Voice deepening, facial hair development",
			13: "Increased appetite, emotional changes",
			14: "Growth spurt, cognitive growth",
			15: "Developing identity, peer relationships intensify",
			16: "Possible start of driving, development of abstract thinking",
			17: "Potential increased risk for hypertension if unhealthy lifestyle begins",
			18: "Brain development continues, peak of physical activity",
			19: "Potential risk for diabetes if sedentary lifestyle begins",
			20: "Establishing self-identity, exploring relationships",
			21: "Higher cognitive function, potential risk of unhealthy habits",
			22: "Exploration of career paths, social dynamics",
			23: "Potential early signs of hypertension if not managed",
			24: "Possible increased sedentary behavior, risk for metabolic syndrome",
			25: "Metabolic rate slows down, weight management becomes essential",
			26: "Potential risk for hypertension if weight and diet unchecked",
			27: "Increased stress levels due to work or relationships",
			28: "Establishment of career, potential family planning",
			29: "Increased risk of diabetes if diet and weight are not managed",
			30: "Bone density peak, importance of physical activity",
			31: "Potential for hair thinning, awareness of heart health",
			32: "Muscle mass preservation becomes crucial",
			33: "Potential onset of early signs for genetic health conditions",
			34: "Stress management becomes essential, balanced lifestyle",
			35: "Potential risks for prostate issues, early screenings beneficial",
			36: "Increased importance of dietary habits, check for cholesterol",
			37: "Awareness of cardiovascular health, routine checks",
			38: "Emphasis on maintaining physical health, family life dynamics",
			39: "Potential early signs of diabetes if genetic predisposition",
			40: "Routine screenings for prostate health, potential midlife crisis",
			41: "Regular checks for blood pressure and sugar levels",
			42: "Potential increase in responsibilities, stress management",
			43: "Regular physical exams, monitoring for signs of strokes",
			44: "Increased emphasis on weight management, balanced diet",
			45: "Routine checks for diabetes, cholesterol, prostate health",
			46: "Potential onset of visual impairments, presbyopia",
			47: "Awareness of potential kidney health, reduce salt intake",
			48: "Regular cardiovascular check-ups, maintain active lifestyle",
			49: "Early detection and management of hypertension becomes crucial",
			50: "Increased screenings for prostate cancer, manage stress",
			51: "Potential onset of andropause, hormonal changes",
			52: "Regular checks for heart health, maintain muscle mass",
			53: "Potential onset of osteoarthritis, joint health",
			54: "Emphasis on mental health, potential onset of depression",
			55: "Awareness of genetic risk factors, regular screenings",
			56: "Emphasis on brain exercises, cognitive health",
			57: "Potential risks of strokes, monitor blood pressure",
			58: "Increased importance of hydration, kidney function",
			59: "Potential decline in muscle mass, strength training crucial",
			60: "Awareness of signs for diabetes complications",
			61: "Increased risk of hypertension, maintain salt intake",
			62: "Bone health awareness, potential for osteoporosis",
			63: "Regular prostate checks, potential for benign prostatic hyperplasia",
			64: "Potential risks of strokes due to hypertension",
			65: "Retirement, potential changes in social dynamics",
			66: "Awareness of potential memory decline, dementia risks",
			67: "Potential risks of diabetes complications if not managed",
			68: "Awareness of skin health, age spots, skin changes",
			69: "Potential decrease in hearing, hearing aids",
			70: "Increased awareness of cardiovascular health, manage blood pressure",
			71: "Awareness of potential mobility issues, joint health",
			72: "Regular check-ups for prostate health, potential cancer signs",
			73: "Importance of balanced diet, digestive health",
			74: "Increased risk of strokes, monitor cholesterol",
			75: "Emphasis on lung health, breathing exercises",
			76: "Potential risks for genetic conditions, manage lifestyle",
			77: "Importance of social interactions, mental health",
			78: "Awareness of eye health, potential risks for cataracts",
			79: "Emphasis on oral health, potential gum diseases",
			80: "Regular screenings for prostate cancer, early detection",
			81: "Increased importance of bone health, prevent fractures",
			82: "Awareness of neurological health, signs of Alzheimer's",
			83: "Potential decrease in metabolism, dietary adjustments",
			84: "Potential risks of strokes, monitor heart health",
			85: "Awareness of potential incontinence, prostate health",
			86: "Importance of regular medical check-ups, screenings",
			87: "Potential for age-related muscle weakness, physiotherapy",
			88: "Awareness of potential respiratory issues, lung health",
			89: "Increased risk for age-related diabetes complications",
			90: "Emphasis on holistic health, mental well-being, regular medical check-ups"
		};


		function getAgeAndTimeLeft(dateOfBirth, lifeExpectancy = TOTAL_ROWS) {
			const currentDate = new Date();

			// Calculate age
			const ageDiffMs = currentDate - dateOfBirth;
			const ageDiffDate = new Date(ageDiffMs);

			let ageYears = Math.abs(ageDiffDate.getUTCFullYear() - 1970);
			let ageMonths = ageDiffDate.getUTCMonth();
			let ageDays = ageDiffDate.getUTCDate() - 1; // subtracting 1 because it starts from 1

			// Calculate time left
			let yearsLeft = lifeExpectancy - ageYears;
			let monthsLeft = 12 - ageMonths - 1; // subtract 1 to account for the current month
			let daysLeft = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0).getDate() - currentDate.getDate();

			if (daysLeft < 0) {
				daysLeft += new Date(currentDate.getFullYear(), currentDate.getMonth(), 0).getDate();
				monthsLeft -= 1;
			}

			if (monthsLeft < 0) {
				monthsLeft += 12;
				yearsLeft -= 1;
			}

			// Return formatted strings
			return {
				ageString: `${ageYears}y ${ageMonths}m ${ageDays}d old`,
				timeLeftString: `${yearsLeft}y ${monthsLeft}m ${daysLeft}d left!`
			};
		}

		const { ageString, timeLeftString } = getAgeAndTimeLeft(BIRTHDATE);
		document.title = `${timeLeftString} (${ageString})`;
		
		
        function weeksBetweenDates(startDate, endDate) {
            const oneWeek = 7 * 24 * 60 * 60 * 1000;
            const diff = endDate - startDate;
            return Math.floor(diff / oneWeek);
        }

        function fillBoxes() {
            const currentDate = new Date();
            const totalWeeksLived = weeksBetweenDates(BIRTHDATE, currentDate);
            const totalYearsLived = Math.floor(totalWeeksLived / 52);

            for (let i = 0; i < TOTAL_ROWS; i++) {
                const row = document.createElement('div');
                row.classList.add('row');

                // Add the year label box at the beginning of each row
                const yearLabelBox = document.createElement('div');
                yearLabelBox.classList.add('box', 'year-label');
                yearLabelBox.textContent = (BIRTHDATE.getFullYear() + i).toString();
                row.appendChild(yearLabelBox);

                for (let j = 0; j < BOXES_PER_ROW; j++) {
                    const box = document.createElement('div');
                    box.classList.add('box');

                    if ((i * BOXES_PER_ROW + j) < totalWeeksLived) {
                        box.classList.add('filled');
                    }

                    row.appendChild(box);
                }

                // Add the milestone box at the end of each row
                const milestoneBox = document.createElement('div');
                milestoneBox.classList.add('box', 'milestone');
                milestoneBox.textContent = milestones[i + 1] || "";
                if ((i + 1) <= totalYearsLived) {
                    milestoneBox.classList.add('achieved');
                } else {
                    milestoneBox.classList.add('pending');
                }
                row.appendChild(milestoneBox);

                document.getElementById('lifeTable').appendChild(row);
            }
        }

        fillBoxes();

    </script>

</body>

</html>
